import java.util.*;

class Solution {
    public int longestMountainSubarray(int[] arr) {
        int n = arr.length;
        if (n < 3) return 0;

        int maxLen = 0;
        int i = 1;

        while (i < n - 1) {
            // Check if arr[i] is a peak
            if (arr[i - 1] < arr[i] && arr[i] > arr[i + 1]) {
                int left = i - 1;
                int right = i + 1;

                // Expand left
                while (left > 0 && arr[left - 1] < arr[left])
                    left--;

                // Expand right
                while (right < n - 1 && arr[right] > arr[right + 1])
                    right++;

                // Update maximum mountain length
                maxLen = Math.max(maxLen, right - left + 1);

                // Move i to the end of this mountain
                i = right;
            } else {
                i++;
            }
        }
        return maxLen;
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++)
            arr[i] = sc.nextInt();
        Solution Obj = new Solution();
        int res = Obj.longestMountainSubarray(arr);
        System.out.println(res);
        sc.close();
    }
}
