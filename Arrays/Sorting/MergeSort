class Solution {

    public void merge(int[]nums,int si,int mid ,int ei){
        int [] temp = new int [ei-si+1];
        int i =si;
        int j = mid+1;
        int k =0;


        while(i<=mid && j<=ei){
            if(nums[i]<nums[j]){
                temp[k]=nums[i];
                i++;
            }
            else{
                temp[k]=nums[j];
                j++;
            }
            k++;
        }
        while(i<=mid){
            temp[k++]=nums[i++];
        }
        while(j<=ei){
            temp[k++]=nums[j++];
        }
        for(int a =0,c=si;a<temp.length;a++,c++){
            nums[c]=temp[a];
        }

    }
    public int[] mergesort(int[]nums, int si,int ei){
        if(si<ei){
        int mid = si +(ei-si)/2 ;

        mergesort(nums,si,mid);
        mergesort(nums,mid+1,ei);

        merge(nums,si,mid,ei);
    }
    return nums;
    }
    public int[] sortArray(int[] nums) {
        int si = 0;
        int ei =nums.length-1;
        return mergesort(nums,si,ei);
    }
}
