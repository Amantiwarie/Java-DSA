/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int idx =0;
    public TreeNode construttree(int[] preorder,int leftr,int rightr){

        if(idx >= preorder.length) return null;

        if(preorder[idx] <= leftr || preorder[idx] >= rightr){
            return null;
        }
        TreeNode root= new TreeNode(preorder[idx]);
        idx++;
       root.left = construttree(preorder,leftr,root.val);
       root.right=construttree(preorder,root.val,rightr);
       return root;
    }
    public TreeNode bstFromPreorder(int[] preorder) {
         TreeNode root =construttree(preorder,Integer.MIN_VALUE,Integer.MAX_VALUE);
        return root;
    }
}
