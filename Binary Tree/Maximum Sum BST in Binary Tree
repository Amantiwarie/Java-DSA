/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

 class info {
    int max;
    int min ;
    boolean isbst;
    int sum;

    public info (int max,int min ,boolean isbst,int sum){
        this.max=max;
        this.min=min;
        this.isbst=isbst;
        this.sum=sum;
    }

 }
class Solution {
    public static int maxsum = 0;

    public info dfs(TreeNode root){
        if(root==null){
            return new info (Integer.MIN_VALUE,Integer.MAX_VALUE,true,0);
        }

        info left = dfs(root.left);
        info right =dfs(root.right);

        if(left.isbst && right.isbst && root.val>left.max && root.val<right.min){
            int total = root.val+left.sum+right.sum;
            maxsum =Math.max(maxsum,total);

            return new info(Math.max(root.val,right.max),Math.min(root.val,left.min),true,total);
        }


        return new info(0,0,false,0);
    }
    public int maxSumBST(TreeNode root) {
      maxsum=0;
      dfs(root);
      return maxsum;
    }
}
