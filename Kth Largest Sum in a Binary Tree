class Solution {
    public long kthLargestLevelSum(TreeNode root, int k) {
        if (root == null) return -1;
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        List<Long> levelSums = new ArrayList<>();
        while (!q.isEmpty()) {
            int size = q.size();
            long levelSum = 0;
            for (int i = 0; i < size; i++) {
                TreeNode curr = q.poll();
                levelSum += curr.val;
                if (curr.left != null) q.offer(curr.left);
                if (curr.right != null) q.offer(curr.right);
            }
            levelSums.add(levelSum);
        }
        Collections.sort(levelSums, Collections.reverseOrder());
        return (k <= levelSums.size()) ? levelSums.get(k - 1) : -1;
    }
}
