/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverse (ListNode start,ListNode end){
        ListNode prev =null;
        while(start!=end){
            ListNode next = start.next;
            start.next=prev;
            prev =start;
            start =next;
        }
        return prev;
    }
    public ListNode reverseKGroup(ListNode head, int k) {
        if(head==null || head.next==null) return head;

        ListNode tail = head;
        for(int i=0;i<k;i++){
            if(tail!=null){
                tail=tail.next;
            }else{
                return head;
            }
           
        }
         ListNode newhead =reverse (head,tail);
            head.next=reverseKGroup(tail,k);
            return newhead;

    }
}
