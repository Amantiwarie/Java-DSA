Given an array of length N, where each element denotes the position of a stall. You are also given an integer K which denotes the number of cows that are aggressive. To prevent the cows from hurting each other, you need to assign the cows to the stalls, such that the minimum distance between any two of them is as large as possible. Return the largest minimum distance.

Input Format
The first line contains 'N' and 'K' denoting the number of elements in the array/list and the number of aggresive cows.

The second line contains 'N' single space-separated integers denoting the elements of the array.

"NOTE: " You do not need to print anything; it has already been taken care of.

Just Complete the funtion.

Output Format
Print the majority element.

Example 1
Input

3 2
1 2 3
Output:

2
Explanation:

The largest minimum distance will be 2 when 2 cows are placed at positions {1,3}.


import java.io.*;
import java.util.*;

class Solution {

    public static int aggressiveCows(int a[], int cows) {
        Arrays.sort(a); // Step 1: sort stalls
        int n = a.length;
        
        int low = 1; // minimum possible distance
        int high = a[n - 1] - a[0]; // maximum possible distance
        int ans = 0;

        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (canPlace(a, cows, mid)) {
                ans = mid;   // feasible distance
                low = mid + 1; // try for bigger distance
            } else {
                high = mid - 1; // reduce distance
            }
        }
        return ans;
    }

    // Helper to check if cows can be placed with given min distance
    private static boolean canPlace(int[] a, int cows, int dist) {
        int count = 1; // place first cow at first stall
        int lastPos = a[0];

        for (int i = 1; i < a.length; i++) {
            if (a[i] - lastPos >= dist) {
                count++;
                lastPos = a[i];
                if (count >= cows) return true;
            }
        }
        return false;
    }
}

class Main {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int[] nums = new int[n];
        for (int i = 0; i < n; i++) {
            nums[i] = sc.nextInt();
        }
        Solution obj = new Solution();
        System.out.println(obj.aggressiveCows(nums, k));
    }
}
