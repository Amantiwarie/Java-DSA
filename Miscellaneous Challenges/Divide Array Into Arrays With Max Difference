. Divide Array Into Arrays With Max Difference

Hint
You are given an integer array nums of size n where n is a multiple of 3 and a positive integer k.

Divide the array nums into n / 3 arrays of size 3 satisfying the following condition:

The difference between any two elements in one array is less than or equal to k.
Return a 2D array containing the arrays. If it is impossible to satisfy the conditions, return an empty array. And if there are multiple answers, return any of them.

 

Example 1:

Input: nums = [1,3,4,8,7,9,3,5,1], k = 2

Output: [[1,1,3],[3,4,5],[7,8,9]]

Explanation:

The difference between any two elements in each array is less than or equal to 2.



class Solution {
    public int[][] divideArray(int[] nums, int k) {
        
        int n = nums.length, m = n / 3;
        int[][] result = new int[m][3];
        int id = 0;

        Arrays.sort(nums);

        for(int i = 0;i < n;i += 3) {

            int j = i + 2;

            if(nums[j] - nums[i] > k) {
                return new int[][]{};
            } else {
                result[id][0] = nums[i];
                result[id][1] = nums[i + 1];
                result[id][2] = nums[i + 2];
                id++;
            }
        }

        return result;
    }
}
