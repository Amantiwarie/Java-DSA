import java.io.*;
import java.util.*;

public class Main {
  public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    int n = Integer.parseInt(br.readLine().trim());
    String[] ropeStr = br.readLine().trim().split(" ");
    int[] ropes = new int[n];
    for(int i = 0; i < n; i++){
      ropes[i] = Integer.parseInt(ropeStr[i]);
    }
    
    Solution ob = new Solution();
    int result = ob.minCost(ropes, n);
    System.out.println(result);
  }
}

class Solution {
  public int minCost(int[] arr, int n) {
    PriorityQueue<Integer> pq = new PriorityQueue<>();
    
    // Add all ropes to min heap
    for (int i = 0; i < n; i++) {
      pq.add(arr[i]);
    }
    
    int totalCost = 0;
    
    // Keep connecting until one rope remains
    while (pq.size() > 1) {
      int first = pq.poll();
      int second = pq.poll();
      
      int cost = first + second;
      totalCost += cost;
      
      pq.add(cost);
    }
    
    return totalCost;
  }
}
