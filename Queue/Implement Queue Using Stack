import java.util.*;

class StackQueue {
    Stack<Integer> S1 = new Stack<>();
    Stack<Integer> S2 = new Stack<>();

    // Push operation (enqueue) - O(1)
    void Push(int a) {
        S1.push(a);
    }

    // Pop operation (dequeue) - Amortized O(1)
    int Pop() {
        if (S2.isEmpty()) {
            if (S1.isEmpty()) {
                return -1; // Queue is empty
            }
            // Transfer all elements from S1 to S2
            while (!S1.isEmpty()) {
                S2.push(S1.pop());
            }
        }
        return S2.pop(); // Dequeue the front element
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in); 
        StackQueue s = new StackQueue();	
        int q = scanner.nextInt();
       
        while (q-- > 0) {
            int queryType = scanner.nextInt();
            if (queryType == 1) {
                int a = scanner.nextInt();
                s.Push(a); 
            } else if (queryType == 2) {
                System.out.print(s.Pop() + " ");
            }
        }
        scanner.close();
    }
}
