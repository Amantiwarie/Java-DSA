You are given a matrix of size n * n. Your task is to rotate the elements of matrix by 90 degrees(clockwise)

Note: Solve this question using Recursion. Also modify the input array itself, do not make another 2D matrix.

Input Format
First line contains an integer n

Next n lines contains n space separated integers

Output Format
Complete the function MatRotateRecur() which rotates the input matrix.

Example 1
Input

2
1 2
3 4
Output

3 1
4 2
Example 2
Input

7 7
4 22 28 23 11 22 12
42 7 32 12 33 40 7
13 46 29 16 2 36 17
42 6 42 36 11 44 27
9 18 27 29 12 32 38
28 27 20 40 19 29 24
39 35 14 36 10 50 25
Output

39 28 9 42 13 42 4
35 27 18 6 46 7 22 
14 20 27 42 29 32 28
36 40 29 36 16 12 23
10 19 12 11 2 33 11
50 29 32 44 36 40 22
25 24 38 27 17 7 12



import java.util.*;

class Solution {
    public void MatRotateRecur(int[][] mat) {
        rotateLayer(mat, 0, mat.length); 
    }

    private void rotateLayer(int[][] mat, int start, int n) {
        if (n <= 1) return;
        int end = start + n - 1;
        for (int i = 0; i < n - 1; i++) {
            int temp = mat[start][start + i];
            mat[start][start + i] = mat[end - i][start];
            mat[end - i][start] = mat[end][end - i];
            mat[end][end - i] = mat[start + i][end];
            mat[start + i][end] = temp;
        }
        rotateLayer(mat, start + 1, n - 2);
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] mat = new int[n][n];
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < n; j++)
                mat[i][j] = sc.nextInt();
        }
        Solution Obj = new Solution();
        Obj.MatRotateRecur(mat);
        for(int[] ar : mat) {
            for(int a : ar)
                System.out.print(a + " ");
            System.out.println();
        }
    }
}
