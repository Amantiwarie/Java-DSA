import java.util.Scanner;
import java.util.Stack;

public class Main {
    public static int findCelebrity(int[][] M, int N) {
        Stack<Integer> stack = new Stack<>();

        // Step 1: Push all people onto the stack
        for (int i = 0; i < N; i++) {
            stack.push(i);
        }

        // Step 2: Determine a possible celebrity
        while (stack.size() > 1) {
            int a = stack.pop();
            int b = stack.pop();

            if (M[a][b] == 1) {
                // a knows b -> a is not a celebrity, but b might be
                stack.push(b);
            } else {
                // a doesn't know b -> b is not a celebrity, but a might be
                stack.push(a);
            }
        }

        // The last remaining person is a candidate for celebrity
        if (stack.isEmpty()) return -1; // No candidate

        int candidate = stack.pop();

        // Step 3: Verify the candidate
        for (int i = 0; i < N; i++) {
            if (i != candidate) {
                if (M[candidate][i] == 1 || M[i][candidate] == 0) {
                    return -1; // Candidate is invalid
                }
            }
        }

        return candidate; // Celebrity found
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[][] M = new int[N][N];

        // Read input matrix
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                M[i][j] = sc.nextInt();
            }
        }

        // Find and print the celebrity index
        System.out.println(findCelebrity(M, N));

        sc.close();
    }
}
