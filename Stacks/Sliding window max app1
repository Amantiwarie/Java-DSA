class Solution {

    public int [] nextGreaterElement(int [] arr){
        Stack <Integer> st = new Stack<>();
        int nge[] = new int[arr.length];
        for(int i=arr.length-1;i>=0;i--){
            while(!st.isEmpty() && arr[i]>arr[st.peek()]){
                st.pop();
            }
            if(st.isEmpty()){
                nge[i]=arr.length;
            }else{
            nge[i]=st.peek();
            }
            st.push(i);
        }
        return nge;
    }


    public int[] maxSlidingWindow(int[] nums, int k) {
        int [] nge = nextGreaterElement(nums);
        int n =nums.length;
        int ans []= new int[n-k+1];

        for(int i=0;i<=n-k;i++){

            int j =i;
            int ei = i+k-1;
            while(nge[j]<=ei){
                j =nge[j];
            }
            ans[i]=nums[j];
        } 
        return ans;
    }
}
