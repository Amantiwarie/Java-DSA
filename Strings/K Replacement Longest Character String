K Replacement Longest Character String
Given a string s and an integer k.

You can perform following step on the string at most k times.

Choose any character of the string and change it to any other lowercase english letter

Now return the length of the longest substring containing the same letter you can get after performing the above operations.

Input Format
First line contains two integers n and k, representing the length of string and at most operations respectively.

Second line contains the string s.

Output Format
Print the length of the longest substring containing the same letter.

Example 1
Input

4 2
abab
Output

4
Explanation

Replace the two 'a's with two 'b's or vice versa.

import java.util.*;

public class Main {

    public static int characterReplacement(int n, int k, String s) {
        int[] freq = new int[26]; // frequency of characters in window
        int maxFreq = 0;
        int left = 0, maxLen = 0;

        for (int right = 0; right < n; right++) {
            freq[s.charAt(right) - 'a']++;
            maxFreq = Math.max(maxFreq, freq[s.charAt(right) - 'a']);

            // if changes needed > k, shrink window
            while ((right - left + 1) - maxFreq > k) {
                freq[s.charAt(left) - 'a']--;
                left++;
            }

            maxLen = Math.max(maxLen, right - left + 1);
        }

        return maxLen;
    }

    public static void main(String[] args) throws Throwable {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        String s = sc.next();
        int ans = characterReplacement(n, k, s);
        System.out.println(ans);
    }
}
